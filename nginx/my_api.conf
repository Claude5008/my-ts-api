# /etc/nginx/sites-available/my_api.conf
server {
    listen 80; # Listen for HTTP requests on port 80
    listen [::]:80; # Listen on IPv6 as well
    server_name your_domain.com localhost; # Replace with your domain or server IP

    location / {
        # Proxy all requests to your Node.js application running in the 'app' service
        # 'app' is the service name defined in docker-compose.yml
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Optional: Serve static files directly through NGINX for better performance
    # For example, if you have a `public` folder in your project
    # location /static/ {
    #     alias /path/to/your/my-ts-api/public/; # Absolute path to your static files
    #     expires 30d;
    #     add_header Cache-Control "public";
    # }


    # Keep your custom logs for now if you want them inside the container,
    # otherwise they can be removed as Docker logs handle stdout/stderr
    error_log /var/log/nginx/my_api_error.log warn;  # Added 'warn' level
    access_log /var/log/nginx/my_api_access.log;
}
